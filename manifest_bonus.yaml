apiVersion: v1
kind: Namespace
metadata:
  name: review-system-namespace

---
# ðŸ”¹ PostgreSQL Database Secret
apiVersion: v1
kind: Secret
metadata:
  name: review-db-secret
  namespace: review-system-namespace
type: Opaque
data:
  POSTGRES_PASSWORD: cG9zdGdyZXNfcGFzc3dvcmQ=  # Base64 encoded "postgres_password"

---
# ðŸ”¹ PostgreSQL StatefulSet (Updated Based on Task 1)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: review-db
  namespace: review-system-namespace
spec:
  serviceName: review-db-service
  replicas: 1
  selector:
    matchLabels:
      app: review-db
  template:
    metadata:
      labels:
        app: review-db
    spec:
      containers:
      - name: review-db
        image: docker.io/library/postgres:13-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_DB
          value: "reviewdb"
        - name: POSTGRES_USER
          value: "postgres"
        - name: PGUSER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: review-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_PORT
          value: "5432"
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: review-db-storage
          subPath: data
  volumeClaimTemplates:
  - metadata:
      name: review-db-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: gp2

---
# ðŸ”¹ PostgreSQL Database Service
apiVersion: v1
kind: Service
metadata:
  name: review-db-service
  namespace: review-system-namespace
spec:
  selector:
    app: review-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---
# ðŸ”¹ Review App StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: review-app-0
  namespace: review-system-namespace
spec:
  serviceName: review-app-service
  replicas: 1
  selector:
    matchLabels:
      app: review-app
  template:
    metadata:
      labels:
        app: review-app
    spec:
      containers:
      - name: review-app
        image: 327871770781.dkr.ecr.us-east-2.amazonaws.com/review-app:latest
        command: ["python3", "review.py"]  # Ensure review.py runs correctly
        env:
        - name: POSTGRES_DB
          value: "reviewdb"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: review-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          value: "review-db-service"
        ports:
        - containerPort: 8000

---
# ðŸ”¹ MinIO Storage Secret
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: review-system-namespace
type: Opaque
data:
  MINIO_ROOT_USER: bWluaW9hZG1pbg==   # Base64 encoded "minioadmin"
  MINIO_ROOT_PASSWORD: bWluaW9zZWNyZXQxMjM=  # Base64 encoded "miniosecret123"

---
# ðŸ”¹ MinIO PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: review-system-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2

---
# ðŸ”¹ MinIO Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: review-system-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio
        args: ["server", "/data"]
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: MINIO_ROOT_PASSWORD
        ports:
        - containerPort: 9000
        - containerPort: 9001
        volumeMounts:
        - name: minio-storage
          mountPath: "/data"
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc

---
# ðŸ”¹ MinIO Service
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: review-system-namespace
spec:
  selector:
    app: minio
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
  type: ClusterIP
---
# ðŸ”¹ Review App Service
apiVersion: v1
kind: Service
metadata:
  name: review-app-service
  namespace: review-system-namespace
spec:
  selector:
    app: review-app
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
